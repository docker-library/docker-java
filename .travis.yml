language: bash
services: docker

matrix:
  include:
    - os: linux
      env: VERSION=14 VARIANT=oracle
    - os: linux
      env: VERSION=14
    - os: linux
      env: VERSION=14 VARIANT=slim
    - os: linux
      env: VERSION=14 VARIANT=alpine
    - os: windows
      dist: 1903-containers
      env: VERSION=14 VARIANT=windows/windowsservercore-1903
    - os: windows
      dist: 1803-containers
      env: VERSION=14 VARIANT=windows/windowsservercore-1803
    - os: linux
      env: VERSION=13 VARIANT=oracle
    - os: linux
      env: VERSION=13
    - os: linux
      env: VERSION=13 VARIANT=slim
    - os: windows
      dist: 1903-containers
      env: VERSION=13 VARIANT=windows/windowsservercore-1903
    - os: windows
      dist: 1803-containers
      env: VERSION=13 VARIANT=windows/windowsservercore-1803
    - os: linux
      env: VERSION=11
    - os: linux
      env: VERSION=11 VARIANT=slim
    - os: windows
      dist: 1903-containers
      env: VERSION=11 VARIANT=windows/windowsservercore-1903
    - os: windows
      dist: 1803-containers
      env: VERSION=11 VARIANT=windows/windowsservercore-1803
    - os: linux
      env: VERSION=8
    - os: linux
      env: VERSION=8 VARIANT=slim
    - os: windows
      dist: 1903-containers
      env: VERSION=8 VARIANT=windows/windowsservercore-1903
    - os: windows
      dist: 1803-containers
      env: VERSION=8 VARIANT=windows/windowsservercore-1803

install:
  - git clone https://github.com/docker-library/official-images.git ~/official-images
  - if [ "$TRAVIS_OS_NAME" = 'linux' ]; then wget -qO- 'https://github.com/tianon/pgp-happy-eyeballs/raw/master/hack-my-builds.sh' | bash; fi

before_script:
  - env | sort
  - cd "$VERSION"
  - imageBase="openjdk:$VERSION"
  - imageSuffix="${VARIANT:+-$(basename "$VARIANT")}"

script:
  - |
    (
      set -Eeuo pipefail
      set -x
      docker build -t "$imageBase-jdk$imageSuffix" "jdk${VARIANT:+/$VARIANT}"
      if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
        # TODO make the tests run successfully on Windows too!
        docker run --rm "$imageBase-jdk$imageSuffix" javac -version
        docker run --rm "$imageBase-jdk$imageSuffix" java -version
      else
        ~/official-images/test/run.sh "$imageBase-jdk$imageSuffix"
      fi
      if [ -d "jre${VARIANT:+/$VARIANT}" ]; then
        docker build -t "$imageBase-jre$imageSuffix" "jre${VARIANT:+/$VARIANT}"
        if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
          # TODO make the tests run successfully on Windows too!
          docker run --rm "$imageBase-jre$imageSuffix" java -version
        else
          ~/official-images/test/run.sh "$imageBase-jre$imageSuffix"
        fi
      fi
    )

after_script:
  - docker images

# vim:set et ts=2 sw=2:
